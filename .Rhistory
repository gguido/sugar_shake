<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
}
for(i in seq_along(vars)) {
tkgrid(tklabel(tt, text=labels[i]), entries[[i]], pady=10, padx=10, columnspan=4)
}
tkgrid(submit.but, cancel.but, reset.but, pady=10, padx=10, columnspan=3)
tkfocus(tt)
# Do not proceed with the following code until the variable done is non-zero.
# (But other processes can still run, i.e. the system is not frozen.)
tkwait.variable(done)
if(tclvalue(done) != 1) {
results <- NULL
}
tkdestroy(tt)
return(results)
}
if(FALSE) { #Test the dialog
vals <- varEntryDialog(vars=c('Variable1', 'Variable2'))
str(vals)
vals <- varEntryDialog(vars=c('Var1', 'Var2'),
labels=c('Enter an integer:', 'Enter a string:'),
fun=c(as.integer, as.character))
str(vals)
#Add a custom validation function
vals <- varEntryDialog(vars=c('Var1'),
labels=c('Enter an integer between 0 and 10:'),
fun=c(function(x) {
x <- as.integer(x)
if(x >= 0 & x <= 10) {
return(x)
} else {
stop("Why didn't you follow instruction!\nPlease enter a number between 0 and 10.")
}
} ))
str(vals)
#Return a list
vals <- varEntryDialog(vars=c('Var1'),
labels=c('Enter a comma separated list of something:'),
fun=c(function(x) {
return(strsplit(x, split=','))
}))
vals$Var1
str(vals)
}
vals <- varEntryDialog(vars=c('Variable1', 'Variable2'))
vals
formicobox_blocco_conteggi <- read.csv("~/Documenti/importanza_1_sync/unaapi/Sperimentazioni/Formicobox/formicobox_blocco_conteggi.csv", sep=";", dec=",")
View(formicobox_blocco_conteggi)
?merge
detach()
rm(list=ls())
fbox <- read.csv("./formicobox_mombasiglio.csv", sep=";")
View(fbox)
formicobox_blocco_conteggi <- read.csv("~/Documenti/importanza_1_sync/unaapi/Sperimentazioni/Formicobox/formicobox_blocco_conteggi.csv", sep=";", dec=",")
View(formicobox_blocco_conteggi)
formicobox_blocco_conteggi
plot(formicobox_blocco_conteggi[,2:8])
?merge
View(fbox)
merge(formicobox_blocco_conteggi,fbox,by.x=alveare,by.y=cassa)
merge(formicobox_blocco_conteggi,fbox,by.x="alveare",by.y="cassa")
formicobox_blocco_conteggi <- read.csv("~/Documenti/importanza_1_sync/unaapi/Sperimentazioni/Formicobox/formicobox_blocco_conteggi.csv", sep=";", dec=",")
merge(formicobox_blocco_conteggi,fbox,by.x="alveare",by.y="cassa")->fbox_blocco
View(fbox_blocco)
detach()
rm(list=ls())
fbox <- read.csv("./formicobox_mombasiglio.csv", sep=";")
attach(fbox)
fbox$tratt<-c(rep("fb",48),rep("plac",48))   #trattamenti: formicobox, placebo
fbox$ss9_bt=ss300_bt_1+ss300_bt_2+ss300_bt_3 #totale zucchero prima trattamento
fbox$ss9_at=ss300_at_1+ss300_at_2+ss300_at_3 #totale zucchero dopo trattamento
fbox$ss9_at2=ss300_at2_1+ss300_at2_2+ss300_at2_3 #totale zucchero dopo secondo trattamento
detach(fbox)
formicobox_blocco_conteggi <- read.csv("~/Documenti/importanza_1_sync/unaapi/Sperimentazioni/Formicobox/formicobox_blocco_conteggi.csv", sep=";", dec=",")
merge(formicobox_blocco_conteggi,fbox,by.x="alveare",by.y="cassa")->fbox_blocco
View(fbox_blocco)
View(fbox_blocco)
(fbox_blocco$ss9_at-fbox_blocco$ss9_at2)/fbox_blocco$ss9_at
plot((fbox_blocco$ss9_at-fbox_blocco$ss9_at2)/fbox_blocco$ss9_at,fbox_blocco$efficacia..)
(fbox_blocco$ss9_at-fbox_blocco$ss9_at2)/fbox_blocco$ss9_at->eff_arg
plot(eff_arg[tratt.x=="ctr"],fbox_blocco$efficacia..[fbox_blocco$tratt.x=="ctr"])
plot(eff_arg[fbox_blocco$tratt.x=="ctr"],fbox_blocco$efficacia..[fbox_blocco$tratt.x=="ctr"])
plot(eff_arg[fbox_blocco$tratt.x=="fbox"],fbox_blocco$efficacia..[fbox_blocco$tratt.x=="fbox"])
plot(eff_arg[fbox_blocco$tratt.x=="ctr"],fbox_blocco$efficacia..[fbox_blocco$tratt.x=="ctr"])
plot(eff_arg[fbox_blocco$tratt.x=="ctr",],fbox_blocco$efficacia..[fbox_blocco$tratt.x=="ctr"],)
plot(eff_arg[fbox_blocco$tratt.x=="ctr"],fbox_blocco$efficacia..[fbox_blocco$tratt.x=="ctr"])
View(fbox_blocco)
plot(fbox_blocco$fbox_blocco
plot(fbox_blocco$fbox_blocco
plot(fbox_blocco$ss9_at2,fbox_blocco$Tot.con)
cor(fbox_blocco$ss9_at2,fbox_blocco$Tot.con)
cov(fbox_blocco$ss9_at2,fbox_blocco$Tot.con)
cor(fbox_blocco$ss9_at2,fbox_blocco$Tot.con)
formicobox_blocco_conteggi <- read.csv("~/Documenti/importanza_1_sync/unaapi/Sperimentazioni/Formicobox/formicobox_blocco_conteggi.csv", sep=";", dec=",")
merge(formicobox_blocco_conteggi,fbox,by.x="alveare",by.y="cassa")->fbox_blocco
cor(fbox_blocco$ss9_at2,fbox_blocco$Tot.con)
plot(fbox_blocco$ss9_at2,fbox_blocco$Tot.con)
plot(fbox_blocco$ss9_at2[-7],fbox_blocco$Tot.con[-7])
fbox_blocco
View(fbox_blocco)
plot(fbox_blocco$ss9_at2[-6],fbox_blocco$Tot.con[-6])
cor(fbox_blocco$ss9_at2[-6],fbox_blocco$Tot.con[-6])
cor(fbox_blocco$ss9_at2[-6:7],fbox_blocco$Tot.con[-6:7])
cor(fbox_blocco$ss9_at2[-(6:7)],fbox_blocco$Tot.con[-(6:7)])
plot(fbox_blocco$ss9_at2[-(6:7)],fbox_blocco$Tot.con[-(6:7)])
str(fbox_blocco)
?date
as.Date(15/7/2912)
as.Date("15/7/2012")
as.Date("2012/7/15")
str(as.Date("2012/7/15"))
as.Date(c("2012/7/15","2012/07/18")
)
as.Date(c("2012/7/15","2012/07/18","2012/7/22"))
as.Date(c("2012/7/15","2012/07/18","2012/7/22","2012/07/26","2012/7/30","2012/08/3","2012/08/7","2012/08/10","2012/08/13"))
as.Date(c("2012/7/15","2012/07/18","2012/7/22","2012/07/26","2012/7/30","2012/08/3","2012/08/7","2012/08/10","2012/08/13"))->Dates.cad
fbox_blocco[,c(3:9,11:13)]
fbox_blocco[fbox_blocco$tratt.x=="ctr",c(3:9,11:13)]
fbox_blocco[fbox_blocco$tratt.x=="ctr",c(3:9,11:13)]->cadute_fbox
cadute_fbox
fbox_blocco[fbox_blocco$tratt.x=="fbox",c(3:9,11:13)]->cadute_fbox
cadute_fbox
?margin.table
apply(cadute_fbox,2,mean)
plot(Dates.cad,apply(cadute_fbox,2,mean))
plot(Dates.cad)
Dates.cad
length(Dates.cad)
length(apply(cadute_fbox,2,mean))
as.Date(c("2012/7/15","2012/07/18","2012/7/22","2012/07/26","2012/7/30","2012/08/3","2012/08/7","2012/08/8","2012/08/10","2012/08/13"))->Dates.cad
plot(Dates.cad,apply(cadute_fbox,2,mean))
fbox_blocco[fbox_blocco$tratt.x=="fbox",c(3:9,11:13)]->cadute_fbox
plot(Dates.cad,apply(cadute_fbox,2,mean),type="l")
plot(Dates.cad,apply(cadute_ctr,2,mean),type="l")
fbox_blocco[fbox_blocco$tratt.x=="ctr",c(3:9,11:13)]->cadute_ctr
fbox_blocco[fbox_blocco$tratt.x=="fbox",c(3:9,11:13)]->cadute_fbox
plot(Dates.cad,apply(cadute_fbox,2,mean),type="l")
plot(Dates.cad,apply(cadute_ctr,2,mean),type="l")
plot(Dates.cad,apply(cadute_fbox,2,mean),type="l")
boxplot(cadute_fbox~Dates.cad)
?boxplot
sum(cadute_ctr)
sum(cadute_fbox)
sum(apply(cadute_fbox,2,mean))
sum(apply(cadute_ctr,2,mean))
str(fbox_blocco)
mean(fbox_blocco$Z3[fbox_blocco$tratt.x=="fbox"])
mean(fbox_blocco$Z3[fbox_blocco$tratt.x=="ctr"])
mean(fbox_blocco$Z2[fbox_blocco$tratt.x=="ctr"])
mean(fbox_blocco$Z2[fbox_blocco$tratt.x=="fbox"])
boxplot(fbox_blocco$Z2~fbox_blocco$tratt.x)
detach()
rm(list=ls())
fbox <- read.csv("./formicobox_mombasiglio.csv", sep=";")
attach(fbox)
fbox$tratt<-c(rep("fb",48),rep("plac",48))   #trattamenti: formicobox, placebo
fbox$ss9_bt=ss300_bt_1+ss300_bt_2+ss300_bt_3 #totale zucchero prima trattamento
fbox$ss9_at=ss300_at_1+ss300_at_2+ss300_at_3 #totale zucchero dopo trattamento
fbox$ss9_at2=ss300_at2_1+ss300_at2_2+ss300_at2_3 #totale zucchero dopo secondo trattamento
detach(fbox)
attach(fbox)
!is.na(ss9_at-ss9_bt)->include #escluse casse con valori NA
ss9_bt<11 & include ->include #escluse casse con altissima infestazione
detach(fbox)
fboxi<-fbox[include,] #dataset delle casse in analisi
rm(include)
fboxi<-fboxi[order(fboxi$ss9_bt),]
attach(fboxi)
n_plac<-length(ss9_bt[tratt=="plac"]) #numero di casse placebo
n_fb<-length(ss9_bt[tratt=="fb"]) #numero casse formicobox
fboxi$eff_log<-log(ss9_at+0.5)-log(ss9_bt+0.5)
fboxi$aumento<-(ss9_at+1)/(ss9_bt+1)
detach(fboxi)
attach(fboxi)
boxplot(eff_log~tratt)
boxplot(aumento~tratt)
detach(fboxi)
dataplac<-fboxi[fboxi$tratt=="plac",]
datafb<-fboxi[fboxi$tratt=="fb",]
attach(dataplac)
plot(ss9_bt,ss9_at)
abline(ss9_bt,ss9_at)
#plot(glm(ss9_at~sqrt(ss9_bt),family=poisson))
detach(dataplac)
attach(datafb)
points(ss9_bt,ss9_at,pch=3)
abline(ss9_bt,ss9_at)
mean(eff_log)
exp(mean(eff_log))#non sicuro della trasformazione
mean(aumento)
mss9fbbt<-mean(ss9_bt)
mss9fbat<-mean(ss9_at)
mss9fbat/mss9fbbt->m_eff_fb
detach(datafb)
attach(dataplac)
mean(eff_log)
exp(mean(eff_log))#non sicuro della trasformazione
mean(aumento)
mss9placbt<-mean(ss9_bt)
mss9placat<-mean(ss9_at)
(mss9placat)/mss9placbt->m_eff_plac
detach(dataplac)
((mss9fbbt*m_eff_plac)-mss9fbat)/(mss9fbbt*m_eff_plac)
(fbox_blocco$Z3[fbox_blocco$tratt.x=="fbox"])/(fbox_blocco$Z2[fbox_blocco$tratt.x=="fbox"])
formicobox_blocco_conteggi <- read.csv("~/Documenti/importanza_1_sync/unaapi/Sperimentazioni/Formicobox/formicobox_blocco_conteggi.csv", sep=";", dec=",")
merge(formicobox_blocco_conteggi,fbox,by.x="alveare",by.y="cassa")->fbox_blocco
as.Date(c("2012/7/15","2012/07/18","2012/7/22","2012/07/26","2012/7/30","2012/08/3","2012/08/7","2012/08/8","2012/08/10","2012/08/13"))->Dates.cad
fbox_blocco[fbox_blocco$tratt.x=="ctr",c(3:9,11:13)]->cadute_ctr
fbox_blocco[fbox_blocco$tratt.x=="fbox",c(3:9,11:13)]->cadute_fbox
plot(Dates.cad,apply(cadute_fbox,2,mean),type="l")
plot(Dates.cad,apply(cadute_ctr,2,mean),type="l")
mean(fbox_blocco$Z2[fbox_blocco$tratt.x=="ctr"])
mean(fbox_blocco$Z2[fbox_blocco$tratt.x=="fbox"])
boxplot(fbox_blocco$Z2~fbox_blocco$tratt.x)
(fbox_blocco$Z3[fbox_blocco$tratt.x=="fbox"])/(fbox_blocco$Z2[fbox_blocco$tratt.x=="fbox"])
sum(cadute_fbox)
sum(cadute_ctr)
sum(apply(cadute_fbox,2,mean))
sum(apply(cadute_ctr,2,mean))
plot(Dates.cad,apply(cadute_fbox,2,mean),type="l")
plot(Dates.cad,apply(cadute_ctr,2,mean),type="l")
plot(Dates.cad,apply(cadute_ctr,2,mean),type="l")
plot(Dates.cad,apply(cadute_ctr,2,mean),type="l")
plot(Dates.cad,apply(cadute_fbox,2,mean),type="l")
boxplot(fbox_blocco$Z2~fbox_blocco$tratt.x)
boxplot(fbox_blocco$Z3~fbox_blocco$tratt.x)
?boxplot
plot(Dates.cad,apply(cadute_fbox,2,mean),type="l")
fbox_blocco$Z2[fbox_blocco$tratt.x=="ctr"]
fbox_blocco[fbox_blocco$tratt.x=="ctr",c(3:9,11:13)]->cadute_ctr
cor(fbox_blocco$Z2[fbox_blocco$tratt.x=="fbox"],apply(cadute_fbox,1,mean))
cor(fbox_blocco$Z2[fbox_blocco$tratt.x=="fbox"],apply(cadute_fbox,1,sum))
cor(fbox_blocco$Z2[fbox_blocco$tratt.x=="ctr"],apply(cadute_ctr,1,sum))
#
detach()
rm(list=ls())
fbox <- read.csv("./data/formicobox_mombasiglio.csv", sep=";")
fbox
str(fbox)
rm(list=ls())
fbox <- read2.csv("./data/formicobox_mombasiglio.csv", sep=";")
rm(list=ls())
fbox <- read.csv2("./data/formicobox_mombasiglio.csv", sep=";")
fbox
str(fbox)
detach()
rm(list=ls())
fbox <- read.csv2("./data/formicobox_mombasiglio.csv", sep=";")
str(fbox)
sug_sett <- read.csv("~/Documenti/importanza_1_sync/unaapi/Sperimentazioni/Formicobox/data_oo/zuccheri_settembre.csv")
View(sug_sett)
str(sug_sett)
names(fbox)
names(fbox)<-c("hive","t0_ss300_1","t0_ss300_2","t0_ss300_3","t0_notes","t0_fbox_daytime","t1_ss300_1","t1_ss300_2","t1_ss300_3","t1_notes","t2_ss300_1","t2_ss300_2","t2_ss300_3","t2_notes","exp2")
write.csv(fbox, "./data/formicobox_mombasiglio.csv")
?merge
str(fbox)
names(fbox)<-c("id_hive","t0_ss300_1","t0_ss300_2","t0_ss300_3","t0_notes","t0_fbox_daytime","t1_ss300_1","t1_ss300_2","t1_ss300_3","t1_notes","t2_ss300_1","t2_ss300_2","t2_ss300_3","t2_notes","exp2")
write.csv(fbox, "./data/formicobox_mombasiglio.csv")
names(sug_sett)<-c("id_hive","t3_ss300_1","t3_ss300_2","t3_ss300_3","t3_notes","t3_id_op_ss")
str(merge(fbox,sug_sett,by="id_hive",all.x=T))
names(fbox)<-c("id_hive","t0_ss300_1","t0_ss300_2","t0_ss300_3","t0_notes","t0_fbox_daytime","t1_ss300_1","t1_ss300_2","t1_ss300_3","t1_notes","t2_ss300_1","t2_ss300_2","t2_ss300_3","t2_notes","exp2")
names(sug_sett)<-c("id_hive","t3_ss300_1","t3_ss300_2","t3_ss300_3","t3_notes","t3_id_op_ss")
fbox<-merge(fbox,sug_sett,by="id_hive",all.x=T)
write.csv(fbox, "./data/fbox_def.csv")
#
detach()
rm(list=ls())
fbox <- read.csv("./data/fbox_def.csv", sep=",")
fbox$t0_tratt<-c(rep("fb",48),rep("ctr",48))   #trattamenti: formicobox, placebo
fbox$t0_tratt<-c(rep("fb",48),rep("ctr",48))   #treatments: fbox, control
fbox$t0_ss900<-fbox$t0_ss300_1+fbox$t0_ss300_2+fbox$t0_ss300_3 #total sugar shake time 0
fbox$t1_ss900=ss300_at_1+ss300_at_2+ss300_at_3 #total sugar shake time 1
fbox$t0_ss900<- fbox$t0_ss300_1 + fbox$t0_ss300_2 + fbox$t0_ss300_3 #total sugar shake time 0
fbox$t1_ss900<- fbox$t1_ss300_1 + fbox$t1_ss300_2 + fbox$t1_ss300_3 #total sugar shake time 1
fbox$t2_ss900<- fbox$t2_ss300_1 + fbox$t2_ss300_2 + fbox$t2_ss300_3 #total sugar shake time 2
fbox$t3_ss900<- fbox$t3_ss300_1 + fbox$t3_ss300_2 + fbox$t3_ss300_3 #total sugar shake time 3
boxplot(fbox$t0_ss900)
!is.na(fbox$t0_ss900-fbox$t1_ss900)->include #escluse casse con valori NA
fbox$t0_ss900<11 & include ->include #escluse casse con altissima infestazione
fboxi<-fbox[include,] #dataset delle casse in analisi
rm(include)
detach()
rm(list=ls())
# data load ---------------------------------------------------------------
fbox <- read.csv("./data/fbox_def.csv", sep=",")
fbox$t0_treat<-c(rep("fb",48),rep("nt",48))   #treatments: fbox, no treatment
# 900 bees sums -----------------------------------------------------------
fbox$t0_ss900<- fbox$t0_ss300_1 + fbox$t0_ss300_2 + fbox$t0_ss300_3 #total sugar shake time 0
fbox$t1_ss900<- fbox$t1_ss300_1 + fbox$t1_ss300_2 + fbox$t1_ss300_3 #total sugar shake time 1
fbox$t2_ss900<- fbox$t2_ss300_1 + fbox$t2_ss300_2 + fbox$t2_ss300_3 #total sugar shake time 2
fbox$t3_ss900<- fbox$t3_ss300_1 + fbox$t3_ss300_2 + fbox$t3_ss300_3 #total sugar shake time 3
############inserire sezione
!is.na(fbox$t0_ss900-fbox$t1_ss900)->include # NAs removed (only time 0 and 1)
fbox$t0_ss900<11 & include ->include #excluded most infested hives
fboxi<-fbox[include,] #dataset delle casse in analisi
rm(include)
n_nt<-length(ss9_bt[tratt=="nt"]) # num ctr hives
dim(fboxi)
dim(fboxi)[1]
dim(fboxi[t0_treat=="nt"])[1]
dim(fboxi[fboxi$t0_treat=="nt",])[1]
dim(fboxi[fboxi$t0_treat=="fb",])[1]
n_nt<-dim(fboxi[fboxi$t0_treat=="nt",])[1] # num ctr hives
n_fb<-dim(fboxi[fboxi$t0_treat=="fb",])[1]    # num fbox hives
fbox$t0_ss900<2
sum(fbox$t0_ss900<2)
sum(fboxi$t0_ss900<2)
sum(fboxi$t0_ss900<1)
sum(fboxi$t0_ss900>1)
sum(fboxi$t0_ss900>0)
fbox$t0_ss900<11 & fbox$t0_ss900>0 & include ->include #excluded most infested hives and hives with infestation under 1/900
!is.na(fbox$t0_ss900-fbox$t1_ss900)->include # NAs removed (only time 0 and 1)
fbox$t0_ss900<11 & fbox$t0_ss900>0 & include ->include #excluded most infested hives and hives with infestation under 1/900
sum(include)
View(fboxi)
boxplot(fboxi$t1_growth~fboxi$t0_treat)
fboxi$t1_growth<-fboxi$t1_ss900/fboxi$t0_ss900
#boxplot(eff_log~tratt)
boxplot(fboxi$t1_growth~fboxi$t0_treat)
n_nt<-dim(fboxi[fboxi$t0_treat=="nt",])[1] # num ctr hives
n_fb<-dim(fboxi[fboxi$t0_treat=="fb",])[1]    # num fbox hives
n_nt
n_fb
!is.na(fbox$t0_ss900-fbox$t1_ss900)->include # NAs removed (only time 0 and 1)
fbox$t0_ss900<11 & fbox$t0_ss900>0 & include ->include #excluded most infested hives and hives with infestation under 1/900
fboxi<-fbox[include,] #dataset delle casse in analisi
rm(include)
#fboxi<-fboxi[order(fboxi$ss9_bt),] ????? inutile ?????
n_nt<-dim(fboxi[fboxi$t0_treat=="nt",])[1] # num ctr hives
n_fb<-dim(fboxi[fboxi$t0_treat=="fb",])[1]    # num fbox hives
n_nt
>>>>>>> 5e11d6990a558da141a899493187423acb8fec5d
>>>>>>> 6edbdb44bdde1fadd937ba4c712c80f66118f4bd
n_fb
fboxi$t1_growth<-(fboxi$t1_ss900-fboxi$t0_ss900)/fboxi$t0_ss900
#boxplot(eff_log~tratt)
boxplot(fboxi$t1_growth~fboxi$t0_treat)
fboxi$t1_growth<-(fboxi$t1_ss900-fboxi$t0_ss900)/fboxi$t0_ss900*100
#boxplot(eff_log~tratt)
boxplot(fboxi$t1_growth~fboxi$t0_treat)
fboxi_nt<-fboxi[fboxi$t0_treat=="nt",]
fboxi_fb<-fboxi[fboxi$t0_treat=="fb",]
plot(fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
abline(fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
lm(t1_ss900~t0_ss900,data=fboxi_nt)
points(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,pch=3)
abline(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900)
lm(t1_ss900~t0_ss900,data=fboxi_fb)
line(lm(t1_ss900~t0_ss900,data=fboxi_fb))
plot(lm(t1_ss900~t0_ss900,data=fboxi_fb),add=T)
ht.efficacy<-function(ta,tb,cb,ca){100*(1-(ta*cb)/(tb*ca))}
ht.efficacy<-function(tb,ta,cb,ca){100*(1-(ta*mean(cb))/(tb*mean(ca))}
ht.efficacy<-function(tb,ta,cb,ca){100*(1-(ta*mean(cb)/(tb*mean(ca)))}
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta*mean(cb))/(tb*mean(ca)))}
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta*mean(cb))/(tb*mean(ca))))}
ht.efficacy(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
fboxi$t1_ht.eff<-ht.efficacy(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
fboxi_fb$t1_ht.eff<-ht.efficacy(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
mean(fboxi_fb)
fboxi_nt$t1_ss900
fboxi_nt$t1_ss900/9
# hives selection -------------------------------------------------------
!is.na(fbox$t0_ss900-fbox$t1_ss900)->include # NAs removed (only time 0 and 1)
fbox$t0_ss900<11 & fbox$t0_ss900>1 & include ->include #excluded most infested hives and hives with infestation under 1/900
fboxi<-fbox[include,] #dataset delle casse in analisi
rm(include)
#fboxi<-fboxi[order(fboxi$ss9_bt),] ????? inutile ?????
n_nt<-dim(fboxi[fboxi$t0_treat=="nt",])[1] # num ctr hives
n_fb<-dim(fboxi[fboxi$t0_treat=="fb",])[1]    # num fbox hives
# t1-t0 growth analysis ---------------------------------------------------
#fboxi$eff_log<-log(ss9_at+0.5)-log(ss9_bt+0.5)
fboxi$t1_growth<-(fboxi$t1_ss900-fboxi$t0_ss900)/fboxi$t0_ss900*100
#boxplot(eff_log~tratt)
boxplot(fboxi$t1_growth~fboxi$t0_treat)
fboxi_nt<-fboxi[fboxi$t0_treat=="nt",]
fboxi_fb<-fboxi[fboxi$t0_treat=="fb",]
plot(fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
abline(fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
lm(t1_ss900~t0_ss900,data=fboxi_nt)
#plot(glm(ss9_at~sqrt(ss9_bt),family=poisson))
points(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,pch=3)
abline(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900)
### henderson_tilton
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta*mean(cb))/(tb*mean(ca))))}
fboxi_fb$t1_ht.eff<-ht.efficacy(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
mean(fboxi_fb)
n_fb
n_nt
fboxi_fb$t1_ht.eff
plot(fboxi_fb$t0_ss900,fboxi_fb$t1_ht.eff)
abline(fboxi_fb$t0_ss900,fboxi_fb$t1_ht.eff)
getwd()
?Sweave
efficacia_zucchero <- read.csv("~/Documenti/importanza_1_sync/unaapi/Sperimentazioni/Formicobox/data/efficacia_zucchero.csv")
View(efficacia_zucchero)
rm(efficacia_zucchero)
sug_alc <- read.csv("~/Documenti/importanza_1_sync/unaapi/Sperimentazioni/Formicobox/data/efficacia_zucchero.csv")
View(efficacia_zucchero)
sug_alc <- read.csv("~/Documenti/importanza_1_sync/unaapi/Sperimentazioni/Formicobox/data/efficacia_zucchero.csv")
str(sug_alc)
mean(n_am)
mean(sug_alc$n_am)
mean(sug_alc$n_am,na.rm=T)
sd(sug_alc$n_am,na.rm=T)
sug_alc <- read.csv("./data/efficacia_zucchero.csv")
mean(sug_alc$n_am,na.rm=T)
boxplot(sug_alc$n_am)
?plot
boxplot(sug_alc$n_am,ylim=c(0,500))
sug_alc$n_vd_sug+sug_alc$n_vd_alc
sug_alc$n_vd_alc/(sug_alc$n_vd_sug+sug_alc$n_vd_alc)
sug_alc$n_vd_sug/(sug_alc$n_vd_sug+sug_alc$n_vd_alc)
sug_als$sug_eff<-sug_alc$n_vd_sug/(sug_alc$n_vd_sug+sug_alc$n_vd_alc)
sug_alc$sug_eff<-sug_alc$n_vd_sug/(sug_alc$n_vd_sug+sug_alc$n_vd_alc)
boxplot(sug_alc$sug_eff)
boxplot(sug_alc$sug_eff*100,ylim=c(0,100))
mean(sug_alc$sug_eff*100)
mean(sug_alc$sug_eff*100,na.rm=T)
sd(sug_alc$sug_eff*100,na.rm=T)
boxplot(sug_alc$sug_eff*100~sug_alc$id_op_alc,ylim=c(0,100))
313*59
?with
source("analisi_formicobox.R")
print(xtable(read.csv2("../data/date.csv"),caption = "Cronologia degli interventi",
label = "table:date"), caption.placement = "bottom", include.rownames = T)
library(xtable)
print(xtable(read.csv2("../data/date.csv"),caption = "Cronologia degli interventi",
label = "table:date"), caption.placement = "bottom", include.rownames = T)
getwd
getwd()
print(xtable(read.csv2("data/date.csv"),caption = "Cronologia degli interventi",
label = "table:date"), caption.placement = "bottom", include.rownames = T)
library(xtable)
print(xtable(read.csv2("data/date.csv"),caption = "Cronologia degli interventi",
label = "table:date"), caption.placement = "bottom", include.rownames = T)
library(xtable)
setwd(..)
print(xtable(read.csv2("data/date.csv"),caption = "Cronologia degli interventi",
label = "table:date"), caption.placement = "bottom", include.rownames = T)
setwd("..")
print(xtable(read.csv2("data/date.csv"),caption = "Cronologia degli interventi",
label = "table:date"), caption.placement = "bottom", include.rownames = T)
getwd()
dir()
setwd("./Formicobox/")
getwd()
setwd("./scripts/")
print(xtable(read.csv2("../data/date.csv"),caption = "Cronologia degli interventi",
label = "table:date"), caption.placement = "bottom", include.rownames = T)
60/1.5
/2
40/2
20/4
names(tempi)
tempi<-read.csv2("../data/date.csv")
names(tempi)
names(tempi)<-c("data","codice","trattamento"")
)
))))
""
names(tempi)<-c("data","codice","trattamento")
tempi<-read.csv2("../data/date.csv")
names(tempi)<-c("data","codice","operazioni")
tempi<-tempi[,c(2,1,3)]
tempi
?xtable
tempi<-read.csv2("../data/date.csv")
names(tempi)<-c("data","codice","operazioni")
tempi<-tempi[,c(2,1,3)]
library(xtable)
print(xtable(tempi,caption = "Cronologia degli interventi",
label = "table:date"), caption.placement = "bottom", include.rownames = T,width=60)
tempi<-read.csv2("../data/date.csv")
names(tempi)<-c("data","codice","operazioni")
tempi<-tempi[,c(2,1,3)]
library(xtable)
print(xtable(tempi,caption = "Cronologia degli interventi",
label = "table:date", align="lrp{3in}"), caption.placement = "bottom", include.rownames = T)
tempi<-read.csv2("../data/date.csv")
names(tempi)<-c("data","codice","operazioni")
tempi<-tempi[,c(2,1,3)]
library(xtable)
print(xtable(tempi,caption = "Cronologia degli interventi",
label = "table:date", align="lrp{4in}"), caption.placement = "bottom", include.rownames = T)
print(xtable(tempi,caption = "Cronologia degli interventi",
label = "table:date", align="llp{5cm}"), caption.placement = "bottom", include.rownames = T)
print(xtable(tempi,caption = "Cronologia degli interventi",
label = "table:date", align="4p{5cm}"), caption.placement = "bottom", include.rownames = T)
tempi<-read.csv2("../data/date.csv")
names(tempi)<-c("data","codice","operazioni")
tempi<-tempi[,c(2,1,3)]
library(xtable)
print(xtable(tempi,caption = "Cronologia degli interventi",
label = "table:date", align="cccl{5cm}"), caption.placement = "bottom", include.rownames = T)
print(xtable(tempi,caption = "Cronologia degli interventi",
label = "table:date", align="cccp{5cm}"), caption.placement = "bottom", include.rownames = T)
str(tempi)
as.Date(tempi[,2])
dist(as.Date(tempi[,2]))
as.Date(tempi[1,2])-as.Date(tempi[2,2])
?as.Date
as.Date(tempi[,2],format="%d/%m/%y")
tempi[,2]<-as.Date(tempi[,2],format="%d/%m/%y")
dist(tempi)
dist(tempi[2])
dist(tempi[,2])
tempi[1,2]-tempi[2,2]
tempi[3,2]-tempi[2,2]
min(dist(tempi[,2]))
?Date
format(Sys.Date(), "%a %b %d")
format(Sys.Date(), "%d/%m/%y")
tratt<-read.csv2("../data/tratt.csv")
tratt
<<<<<<< HEAD
citation(sweave)
citation(Sweave)
ls()
1/300
*3000
1/300*3000
300*3000
300*300
3000/80000
3000/60000
5*9
3000/60000*900
3000/60000
300/60000
300/60000*900
3000/60000
3000/60000*3*900
3000/60000*900
300/60000*900
minvar/900*100
100/60000
100/60000*900
1000/60000*900
??approximation
??decimals
boxplot(t0_ss900~t0_treat,data=fboxi)
boxplot(t0_ss900~t0_treat,data=fboxi,x.lab=1:2)
boxplot(t0_ss900~t0_treat,data=fboxi,x.lab=c("a","b"))
?boxplot
boxplot(t0_ss900~t0_treat,data=fboxi,names=c("a","b"))
boxplot(t0_ss900~t0_treat,data=fboxi)
boxplot(t0_ss900~t0_treat,data=fboxi,names=c("trattate","non trattate"))
boxplot(t0_ss900~t0_treat,data=fboxi,names=c("trattati","non trattati"))
boxplot(t0_ss900/900~t0_treat,data=fboxi,names=c("trattati","non trattati"))
boxplot(t0_ss900/9~t0_treat,data=fboxi,names=c("trattati","non trattati"))
boxplot(t0_ss900/9~t0_treat,data=fboxi,names=c("trattati","non trattati"),y.lab="infestazione (%)")
boxplot(t0_ss900/9~t0_treat,data=fboxi,names=c("trattati","non trattati"),ylab="infestazione (%)")
?Stangle
?with
?stripchart
#u
boxplot(t0_ss900/9~t0_treat,data=fboxi,names=c("trattati","non trattati"),ylab="infestazione (%)",notch=T)
?kruskal.test
kruskal.test(t0_ss900/9~t0_treat,data=fboxi)
kruskal.test(t0_ss900~t0_treat,data=fboxi)
kruskal.test(fboxi[fboxi$t0_treat=="nt",],fboxi[fboxi$t0_treat=="fb",])
kruskal.test(list(fboxi[fboxi$t0_treat=="nt",],fboxi[fboxi$t0_treat=="fb",]))
kruskal.test(list(fboxi$t0_ss900[fboxi$t0_treat=="nt"],fboxi$t0_ss900[fboxi$t0_treat=="fb"]))
str(kruskal.test(list(fboxi$t0_ss900[fboxi$t0_treat=="nt"],fboxi$t0_ss900[fboxi$t0_treat=="fb"])))
kruskal.test(list(fboxi$t0_ss900[fboxi$t0_treat=="nt"],fboxi$t0_ss900[fboxi$t0_treat=="fb"]))$p.value
format(kruskal.test(list(fboxi$t0_ss900[fboxi$t0_treat=="nt"],fboxi$t0_ss900[fboxi$t0_treat=="fb"]))$p.value,digits=2)
mean(fboxi$t0_ss900[fboxi$t0_treat=="nt"])
mean(fboxi$t0_ss900[fboxi$t0_treat=="fb"])
format(mean(fboxi$t0_ss900[fboxi$t0_treat=="nt"]),digits=2)
format(mean(fboxi$t0_ss900[fboxi$t0_treat=="nt"])/9,digits=2)
format(mean(fboxi$t0_ss900[fboxi$t0_treat=="fb"])/9,digits=2)
?mean
kruskal.test(list(fboxi$t0_ss900[fboxi$t0_treat=="nt"],fboxi$t0_ss900[fboxi$t0_treat=="fb"]))$p.value,digits=2
format(kruskal.test(list(fboxi$t0_ss900[fboxi$t0_treat=="nt"],fboxi$t0_ss900[fboxi$t0_treat=="fb"]))$p.value,digits=2)
tempi<-read.csv2("../data/date.csv")
names(tempi)<-c("Data","Codice","Operazioni")
tempi<-tempi[,c(2,1,3)]
library(xtable)
print(xtable(tempi[,c(2,1)],caption = "Cronologia dei monitoraggi",
label = "table:date", align="ccc"), caption.placement = "bottom", include.rownames = F)
tempi[,2]<-as.Date(tempi[,2],format="%d/%m/%y")
tratt<-read.csv2("../data/tratt.csv")
#library(xtable)
print(xtable(tratt,caption = "Cronologia dei trattamenti. FBOX= FormicoBox, ING=ingabbiamento della regina, SGA=liberazione della regina, CTR=trattamento di controllo", label = "table:tratt", align="cccccc"), caption.placement = "bottom", include.rownames = F)
tempi<-read.csv2("../data/date.csv")
names(tempi)<-c("Data","Codice","Operazioni")
tempi<-tempi[,c(2,1,3)]
library(xtable)
print(xtable(tempi[,c(2,1)],caption = "Cronologia dei monitoraggi", label = "table:date", align="ccc"), caption.placement = "bottom", include.rownames = F)
tempi[,2]<-as.Date(tempi[,2],format="%d/%m/%y")
tempi<-read.csv2("../data/date.csv")
names(tempi)<-c("Data","Codice","Operazioni")
tempi<-tempi[,c(2,1,3)]
library(xtable)
print(xtable(tempi[,c(2,1)],caption = "Cronologia dei monitoraggi", label = "table:date", align="ccc"), caption.placement = "bottom", include.rownames = F)
tempi[,2]<-as.Date(tempi[,2],format="%d/%m/%y")
detach()
rm(list=ls())
# data load ---------------------------------------------------------------
fbox <- read.csv("../data/fbox_def.csv", sep=",")
fbox$t0_treat<-c(rep("fb",48),rep("nt",48))   #treatments: fbox, no treatment
# 900 bees sums -----------------------------------------------------------
fbox$t0_ss900<- fbox$t0_ss300_1 + fbox$t0_ss300_2 + fbox$t0_ss300_3 #total sugar shake time 0
fbox$t1_ss900<- fbox$t1_ss300_1 + fbox$t1_ss300_2 + fbox$t1_ss300_3 #total sugar shake time 1
fbox$t2_ss900<- fbox$t2_ss300_1 + fbox$t2_ss300_2 + fbox$t2_ss300_3 #total sugar shake time 2
fbox$t3_ss900<- fbox$t3_ss300_1 + fbox$t3_ss300_2 + fbox$t3_ss300_3 #total sugar shake time 3
# hives selection -------------------------------------------------------
minvar=1.5  #varroe minime per inclusione
maxvar=15 #varroe massime per inclusione
!is.na(fbox$t0_ss900-fbox$t1_ss900)->include # NAs removed (only time 0 and 1)
fbox$t0_ss900<maxvar & fbox$t0_ss900>minvar & include ->include #excluded most infested hives and hives with infestation under 1/900
fboxi<-fbox[include,] #dataset delle casse in analisi
rm(include)
#fboxi<-fboxi[order(fboxi$ss9_bt),] ????? inutile ?????
n_nt<-dim(fboxi[fboxi$t0_treat=="nt",])[1] # num ctr hives
n_fb<-dim(fboxi[fboxi$t0_treat=="fb",])[1]    # num fbox hives
# t1-t0 growth analysis ---------------------------------------------------
# t0 infestation
boxplot(t0_ss900/9~t0_treat,data=fboxi,names=c("trattati","non trattati"),ylab="infestazione (%)")
#fboxi$eff_log<-log(ss9_at+0.5)-log(ss9_bt+0.5)
fboxi$t1_growth<-(fboxi$t1_ss900-fboxi$t0_ss900)/fboxi$t0_ss900*100
fbox <- read.csv("../data/fbox_def.csv", sep=",")
setwd("~/Documenti/importanza_1_sync/unaapi/Sperimentazioni/Formicobox/scripts")
detach()
rm(list=ls())
# data load ---------------------------------------------------------------
fbox <- read.csv("../data/fbox_def.csv", sep=",")
fbox$t0_treat<-c(rep("fb",48),rep("nt",48))   #treatments: fbox, no treatment
# 900 bees sums -----------------------------------------------------------
fbox$t0_ss900<- fbox$t0_ss300_1 + fbox$t0_ss300_2 + fbox$t0_ss300_3 #total sugar shake time 0
fbox$t1_ss900<- fbox$t1_ss300_1 + fbox$t1_ss300_2 + fbox$t1_ss300_3 #total sugar shake time 1
fbox$t2_ss900<- fbox$t2_ss300_1 + fbox$t2_ss300_2 + fbox$t2_ss300_3 #total sugar shake time 2
fbox$t3_ss900<- fbox$t3_ss300_1 + fbox$t3_ss300_2 + fbox$t3_ss300_3 #total sugar shake time 3
# hives selection -------------------------------------------------------
minvar=1.5  #varroe minime per inclusione
maxvar=15 #varroe massime per inclusione
!is.na(fbox$t0_ss900-fbox$t1_ss900)->include # NAs removed (only time 0 and 1)
fbox$t0_ss900<maxvar & fbox$t0_ss900>minvar & include ->include #excluded most infested hives and hives with infestation under 1/900
fboxi<-fbox[include,] #dataset delle casse in analisi
rm(include)
#fboxi<-fboxi[order(fboxi$ss9_bt),] ????? inutile ?????
n_nt<-dim(fboxi[fboxi$t0_treat=="nt",])[1] # num ctr hives
n_fb<-dim(fboxi[fboxi$t0_treat=="fb",])[1]    # num fbox hives
# t1-t0 growth analysis ---------------------------------------------------
# t0 infestation
boxplot(t0_ss900/9~t0_treat,data=fboxi,names=c("trattati","non trattati"),ylab="infestazione (%)")
#fboxi$eff_log<-log(ss9_at+0.5)-log(ss9_bt+0.5)
fboxi$t1_growth<-(fboxi$t1_ss900-fboxi$t0_ss900)/fboxi$t0_ss900*100
#boxplot(eff_log~tratt)
boxplot(fboxi$t1_growth~fboxi$t0_treat)
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta*mean(cb))/(tb*mean(ca))))}
fboxi_fb$t1_ht.eff<-ht.efficacy(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
mean(fboxi_fb)
# t0 infestation
boxplot(t0_ss900/9~t0_treat,data=fboxi,names=c("trattati","non trattati"),ylab="infestazione (%)")
#fboxi$eff_log<-log(ss9_at+0.5)-log(ss9_bt+0.5)
fboxi$t1_growth<-(fboxi$t1_ss900-fboxi$t0_ss900)/fboxi$t0_ss900*100
#boxplot(t1_growth~tratt)
boxplot(fboxi$t1_growth~fboxi$t0_treat)
fboxi_nt<-fboxi[fboxi$t0_treat=="nt",]
fboxi_fb<-fboxi[fboxi$t0_treat=="fb",]
plot(fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
abline(fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
lm(t1_ss900~t0_ss900,data=fboxi_nt)
#plot(glm(ss9_at~sqrt(ss9_bt),family=poisson))
points(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,pch=3)
abline(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900)
### henderson_tilton
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta*mean(cb))/(tb*mean(ca))))}
fboxi_fb$t1_ht.eff<-ht.efficacy(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
mean(fboxi_fb)
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta/tb*mean(cb/ca))))}
fboxi_fb$t1_ht.eff<-ht.efficacy(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
mean(fboxi_fb)
boxplot(t1_ht.eff,data=fboxi_fb)
boxplot(fboxi_fb$t1_ht.eff)
plot(fboxi_fb$t1_ht.eff,fboxi_fb$t0_ss900)
plot(fboxi_fb$t0_ss900,fboxi_fb$t1_ht.eff)
fboxi_nt$t0_ss900/fboxi_nt$t1_ss900
(fboxi_nt$t0_ss900/fboxi_nt$t1_ss900)^-1
mean(fboxi_nt$t0_ss900/fboxi_nt$t1_ss900)^-1
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((mean(ta/tb)*mean(cb/ca))))}
ht.efficacy(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
(mean(fboxi_nt$t0_ss900)/mean(fboxi_nt$t1_ss900)^-1
)
(mean(fboxi_nt$t0_ss900)/mean(fboxi_nt$t1_ss900))^-1
mean(fboxi_nt$t0_ss900/fboxi_nt$t1_ss900)^-1
mean(fboxi_fb$t0_ss900/fboxi_fb$t1_ss900)^-1
mean(fboxi_fb$t0_ss900/fboxi_fb$t1_ss900)
mean(fboxi_fb$t0_ss900/fboxi_fb$t1_ss900)^-1
mean(fboxi_fb$t1_ss900/fboxi_fb$t0_ss900)
mean(fboxi_nt$t1_ss900/fboxi_fb$nt_ss900)
mean(fboxi_nt$t1_ss900/fboxi_nt$t0_ss900)
asin(sqrt(fboxi_fb$t1_ht.eff))
fboxi_fb$t1_ht.eff)
fboxi_fb$t1_ht.eff
asin(sqrt(fboxi_fb$t1_ht.eff/100))
asin(sqrt(fboxi_fb$t1_ht.eff/100))[-7]
t.test(asin(sqrt(fboxi_fb$t1_ht.eff/100))[-7])
str(t.test(asin(sqrt(fboxi_fb$t1_ht.eff/100))[-7]))
t.test(asin(sqrt(fboxi_fb$t1_ht.eff/100))[-7])$conf.int
sin(t.test(asin(sqrt(fboxi_fb$t1_ht.eff/100))[-7])$conf.int)^2
sin(mean(asin(sqrt(fboxi_fb$t1_ht.eff/100))[-7]))^2
fboxi$t1_growth[fboxi$t0_treat=="fb"]
max(fboxi$t1_growth[fboxi$t0_treat=="fb"])
mean(fboxi$t1_growth[fboxi$t0_treat=="nt"])
mean(fboxi_nt$t1_ss900/fboxi_fb$nt_ss900)
mean(fboxi_nt$t0_ss900/fboxi_nt$t1_ss900)
mean(fboxi_fb$t1_ss900/fboxi_fb$t0_ss900)
fboxi_fb$t1_ss900/fboxi_fb$t0_ss900
cbind(fboxi_fb$t1_ss900,fboxi_fb$t0_ss900)
fboxi_nt$t1_ss900/fboxi_nt$t0_ss900
mean(fboxi_nt$t1_ss900/fboxi_nt$t0_ss900)
i1=c(84.2,88.9,89.2,83.4,80.1,81.3,85.8)
mean(i1)
sd(i1)
asin(sqrt(i1))
asin(sqrt(i1/100))
sin(mean(asin(sqrt(i1/100))))^2
t.test(asin(sqrt(i1/100)))
t.test(asin(sqrt(i1/100)))$conf.int
sin(t.test(asin(sqrt(i1/100)))$conf.int)^2
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta/tb)*mean(cb/ca)))}
#ht.efficacy<-function(tb,ta,cb,ca){100*(1-((mean(ta/tb)*mean(cb/ca))))}
fboxi_fb$t1_ht.eff<-ht.efficacy(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
mean(fboxi_fb$t1_ht.eff)
fboxi_fb$t1_ht.eff
5/2
5/2*mean(fboxi_nt$t0_ss900/fboxi_nt$t1_ss900)^-1
5/2*(mean(fboxi_nt$t0_ss900/fboxi_nt$t1_ss900)^-1)
(5/2)*(mean(fboxi_nt$t0_ss900/fboxi_nt$t1_ss900)^-1)
(5/2)*(mean(fboxi_nt$t0_ss900/fboxi_nt$t1_ss900))
(mean(fboxi_nt$t0_ss900/fboxi_nt$t1_ss900))
0.467*2.5
2.5/5.3
(mean(fboxi_nt$t1_ss900/fboxi_nt$t0_ss900))
(mean(fboxi_nt$t0_ss900/fboxi_nt$t1_ss900))^-1
tb=fboxi_fb$t0_ss900;ta=fboxi_fb$t1_ss900;cb=fboxi_nt$t0_ss900;ca=fboxi_nt$t1_ss900
(ta/tb)*mean(cb/ca)
mean(cb/ca)
1/(mean(cb/ca))
mean(ca/cb)
mean(sin(sqrt(ca/cb)))
mean(asin(sqrt(ca/cb)))
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta/tb)*mean(cb/ca)))}
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta/tb)/mean(ca/cb)))}
#ht.efficacy<-function(tb,ta,cb,ca){100*(1-((mean(ta/tb)*mean(cb/ca))))}
fboxi_fb$t1_ht.eff<-ht.efficacy(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
mean(fboxi_fb$t1_ht.eff)
boxplot(fboxi_fb$t1_ht.eff)
plot(fboxi_fb$t0_ss900,fboxi_fb$t1_ht.eff)
fboxi_fb$t2_ss900/fboxi_fb$t2_ss900
fboxi_fb$t2_ss900/fboxi_fb$t1_ss900
fboxi_fb$t1_ht.eff
fboxi_fb$t3_ss900/fboxi_fb$t2_ss900
plot(fboxi_fb$t3_ss900/fboxi_fb$t2_ss900,fboxi_fb$t1_ht.eff)
plot(fboxi_fb$t1_ht.eff,fboxi_fb$t3_ss900/fboxi_fb$t2_ss900)
#
detach()
rm(list=ls())
# data load ---------------------------------------------------------------
fbox <- read.csv("../data/fbox_def.csv", sep=",")
fbox$t0_treat<-c(rep("fb",48),rep("nt",48))   #treatments: fbox, no treatment
# 900 bees sums -----------------------------------------------------------
fbox$t0_ss900<- fbox$t0_ss300_1 + fbox$t0_ss300_2 + fbox$t0_ss300_3 #total sugar shake time 0
fbox$t1_ss900<- fbox$t1_ss300_1 + fbox$t1_ss300_2 + fbox$t1_ss300_3 #total sugar shake time 1
fbox$t2_ss900<- fbox$t2_ss300_1 + fbox$t2_ss300_2 + fbox$t2_ss300_3 #total sugar shake time 2
fbox$t3_ss900<- fbox$t3_ss300_1 + fbox$t3_ss300_2 + fbox$t3_ss300_3 #total sugar shake time 3
# hives selection -------------------------------------------------------
minvar=1.5  #varroe minime per inclusione
maxvar=15 #varroe massime per inclusione
!is.na(fbox$t0_ss900-fbox$t1_ss900)->include # NAs removed (only time 0 and 1)
fbox$t0_ss900<maxvar & fbox$t0_ss900>minvar & include ->include #excluded most infested hives and hives with infestation under 1/900
fboxi<-fbox[include,] #dataset delle casse in analisi
rm(include)
#fboxi<-fboxi[order(fboxi$ss9_bt),] ????? inutile ?????
n_nt<-dim(fboxi[fboxi$t0_treat=="nt",])[1] # num ctr hives
n_fb<-dim(fboxi[fboxi$t0_treat=="fb",])[1]    # num fbox hives
# t1-t0 growth analysis ---------------------------------------------------
# t0 infestation
boxplot(t0_ss900/9~t0_treat,data=fboxi,names=c("trattati","non trattati"),ylab="infestazione (%)")
#fboxi$eff_log<-log(ss9_at+0.5)-log(ss9_bt+0.5)
fboxi$t1_growth<-(fboxi$t1_ss900-fboxi$t0_ss900)/fboxi$t0_ss900*100
#boxplot(t1_growth~tratt)
boxplot(fboxi$t1_growth~fboxi$t0_treat)
fboxi_nt<-fboxi[fboxi$t0_treat=="nt",]
fboxi_fb<-fboxi[fboxi$t0_treat=="fb",]
plot(fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
abline(fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
lm(t1_ss900~t0_ss900,data=fboxi_nt)
#plot(glm(ss9_at~sqrt(ss9_bt),family=poisson))
points(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,pch=3)
abline(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900)
### henderson_tilton
#ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta*mean(cb))/(tb*mean(ca))))}
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta/tb)*mean(cb/ca)))}
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta/tb)/mean(ca/cb)))}
#ht.efficacy<-function(tb,ta,cb,ca){100*(1-((mean(ta/tb)*mean(cb/ca))))}
fboxi_fb$t1_ht.eff<-ht.efficacy(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
mean(fboxi_fb$t1_ht.eff)
sin(t.test(asin(sqrt(fboxi_fb$t1_ht.eff/100))[-7])$conf.int)^2
setwd("~/Documenti/importanza_1_sync/unaapi/Sperimentazioni/Formicobox/scripts")
# data load ---------------------------------------------------------------
fbox <- read.csv("../data/fbox_def.csv", sep=",")
fbox$t0_treat<-c(rep("fb",48),rep("nt",48))   #treatments: fbox, no treatment
# 900 bees sums -----------------------------------------------------------
fbox$t0_ss900<- fbox$t0_ss300_1 + fbox$t0_ss300_2 + fbox$t0_ss300_3 #total sugar shake time 0
fbox$t1_ss900<- fbox$t1_ss300_1 + fbox$t1_ss300_2 + fbox$t1_ss300_3 #total sugar shake time 1
fbox$t2_ss900<- fbox$t2_ss300_1 + fbox$t2_ss300_2 + fbox$t2_ss300_3 #total sugar shake time 2
fbox$t3_ss900<- fbox$t3_ss300_1 + fbox$t3_ss300_2 + fbox$t3_ss300_3 #total sugar shake time 3
# hives selection -------------------------------------------------------
minvar=1.5  #varroe minime per inclusione
maxvar=15 #varroe massime per inclusione
!is.na(fbox$t0_ss900-fbox$t1_ss900)->include # NAs removed (only time 0 and 1)
fbox$t0_ss900<maxvar & fbox$t0_ss900>minvar & include ->include #excluded most infested hives and hives with infestation under 1/900
fboxi<-fbox[include,] #dataset delle casse in analisi
rm(include)
#fboxi<-fboxi[order(fboxi$ss9_bt),] ????? inutile ?????
n_nt<-dim(fboxi[fboxi$t0_treat=="nt",])[1] # num ctr hives
n_fb<-dim(fboxi[fboxi$t0_treat=="fb",])[1]    # num fbox hives
# t1-t0 growth analysis ---------------------------------------------------
# t0 infestation
boxplot(t0_ss900/9~t0_treat,data=fboxi,names=c("trattati","non trattati"),ylab="infestazione (%)")
#fboxi$eff_log<-log(ss9_at+0.5)-log(ss9_bt+0.5)
fboxi$t1_growth<-(fboxi$t1_ss900-fboxi$t0_ss900)/fboxi$t0_ss900*100
#boxplot(t1_growth~tratt)
boxplot(fboxi$t1_growth~fboxi$t0_treat)
fboxi_nt<-fboxi[fboxi$t0_treat=="nt",]
fboxi_fb<-fboxi[fboxi$t0_treat=="fb",]
plot(fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
abline(fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
lm(t1_ss900~t0_ss900,data=fboxi_nt)
#plot(glm(ss9_at~sqrt(ss9_bt),family=poisson))
points(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,pch=3)
abline(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900)
### henderson_tilton
#ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta*mean(cb))/(tb*mean(ca))))}
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta/tb)*mean(cb/ca)))}
ht.efficacy<-function(tb,ta,cb,ca){100*(1-((ta/tb)/mean(ca/cb)))}
#ht.efficacy<-function(tb,ta,cb,ca){100*(1-((mean(ta/tb)*mean(cb/ca))))}
fboxi_fb$t1_ht.eff<-ht.efficacy(fboxi_fb$t0_ss900,fboxi_fb$t1_ss900,fboxi_nt$t0_ss900,fboxi_nt$t1_ss900)
mean(fboxi_fb$t1_ht.eff)
sin(t.test(asin(sqrt(fboxi_fb$t1_ht.eff/100))[-7])$conf.int)^2
mean(asin(sqrt(fboxi_fb$t1_ht.eff)))
mean(asin(sqrt(fboxi_fb$t1_ht.eff/100)))
sin(mean(asin(sqrt(fboxi_fb$t1_ht.eff/100))))^2
<<<<<<< HEAD
=======
=======
>>>>>>> 5e11d6990a558da141a899493187423acb8fec5d
>>>>>>> 6edbdb44bdde1fadd937ba4c712c80f66118f4bd
