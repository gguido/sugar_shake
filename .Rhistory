summary(linear_model)
#numero medio di api post blocco api/campione varroe/api/campione
100/linear_model$coefficients
#ripristino dati
fbox_blocco <- read.csv("../data/formicobox_blocco_conteggi.csv", sep=";", dec=",")
merge(fbox_blocco[-c(10,14:23)],fbox,by="id_hive",all.x=T)->fbox_blocco_m #togliere 76 e 77???? [-(6:7),]
rm(fbox_blocco_m_old)
#fare stessa correlazione tra totale cadute e zucchero a t1
#distinguendo tra trattati e non trattati
#perché in trattati si è intoerrotta la riproduzione
#calcolo efficacia metodo classico delle cadute.
eff.class<-100*apply(fbox_blocco_m[,3:9],1,sum) /  apply(fbox_blocco_m[,3:12],1,sum)
eff.class[which(fbox_blocco_m$tratt=="fbox")]->eff.cad
rm(eff.class)
#confronto con zucchero
rb<-boxplot(eff.cad,ht.sug,names=c("cadute","zucchero"))
c(mean(eff.cad),mean(ht.sug))->mean.values
points(seq(rb$n), mean.values, pch = 17) #aggiunte medie a boxplot
mean(eff.cad)
mean(ht.sug)
plot(eff.cad,ht.sug)
fbox_blocco <- read.csv("../data/formicobox_blocco_conteggi.csv", sep=";", dec=",")
merge(fbox_blocco[-c(10,14:23)],fbox,by="id_hive",all.x=T)->fbox_blocco_m #togliere 76 e 77???? [-(6:7),]
rm(fbox_blocco_m_old)
plot(apply(fbox_blocco_m[,10:12],1,sum),fbox_blocco_m$t2_ss900/9,ylab="zucchero %",xlab="cadute",main="correlazione zucchero t2-cadute in blocco ctr")
#pearson
cor(fbox_blocco_m$t2_ss900/9, apply(fbox_blocco_m[,10:12],1,sum))
#regressione per origine
lm(fbox_blocco_m$t2_ss900/9~0+apply(fbox_blocco_m[,10:12],1,sum))->linear_model
abline(linear_model)
summary(linear_model)
#numero medio di api post blocco api/campione varroe/api/campione
100/linear_model$coefficients
#numero medio di api post blocco api/campione varroe/api/campione
100/linear_model$coefficients
#idem senza 76 e 77
fbox_blocco_m->fbox_blocco_m_old
fbox_blocco_m[-c(6,7),]->fbox_blocco_m
#correlazione zucchero a t2-cadute in blocco nel controllo
plot(apply(fbox_blocco_m[,10:12],1,sum),fbox_blocco_m$t2_ss900/9,ylab="zucchero %",xlab="cadute",main="correlazione zucchero t2-cadute in blocco ctr")
#pearson
cor(fbox_blocco_m$t2_ss900/9, apply(fbox_blocco_m[,10:12],1,sum))
#regressione per origine
lm(fbox_blocco_m$t2_ss900/9~0+apply(fbox_blocco_m[,10:12],1,sum))->linear_model
abline(linear_model)
summary(linear_model)
#numero medio di api post blocco api/campione varroe/api/campione
100/linear_model$coefficients
#ripristino dati
fbox_blocco <- read.csv("../data/formicobox_blocco_conteggi.csv", sep=";", dec=",")
merge(fbox_blocco[-c(10,14:23)],fbox,by="id_hive",all.x=T)->fbox_blocco_m #togliere 76 e 77???? [-(6:7),]
rm(fbox_blocco_m_old)
curve(sqrt(x)/x,0,10)
View(fbox_blocco_m)
apply(fbox_blocco_m[,10:12],1,sum)
apply(fbox_blocco_m[,10:12],1,sum)
apply(fbox_blocco_m[,3:12],1,sum)
sum(apply(fbox_blocco_m[,3:12],1,sum)<300)
length(apply(fbox_blocco_m[,3:12],1,sum)<300)
length(apply(fbox_blocco_m[,3:12],1,sum)<200)
sum(apply(fbox_blocco_m[,3:12],1,sum)<200)
sum(apply(fbox_blocco_m[,3:12],1,sum)<150)
(apply(fbox_blocco_m[,3:12],1,sum)<150)
which(apply(fbox_blocco_m[,3:12],1,sum)<150)
which(apply(fbox_blocco_m[,3:12],1,sum)<150)->togliere
eff.class<-100*apply(fbox_blocco_m[,3:9],1,sum) /  apply(fbox_blocco_m[,3:12],1,sum)
eff.class[togliere]->eff.class
eff.class[which(fbox_blocco_m$tratt=="fbox")]->eff.cad
rm(eff.class)
rb<-boxplot(eff.cad,ht.sug,names=c("cadute","zucchero"))
c(mean(eff.cad),mean(ht.sug))->mean.values
eff.cad
eff.class<-100*apply(fbox_blocco_m[,3:9],1,sum) / apply(fbox_blocco_m[,3:12],1,sum)
eff.class
togliere
fbox_blocco_m[which( apply(fbox_blocco_m[,3:12],1,sum)>300),]
fbox_blocco_m[which( apply(fbox_blocco_m[,3:12],1,sum)>200),]
as.Date(c("2012/7/15","2012/07/18","2012/7/22","2012/07/26","2012/7/30","2012/08/3","2012/08/7","2012/08/8","2012/08/10","2012/08/13"))->Dates.cad
fbox_blocco_m[fbox_blocco_m$tratt=="ctr",c(3:12)]->cadute_ctr
fbox_blocco_m[fbox_blocco_m$tratt=="fbox",c(3:12)]->cadute_fbox
dim(cadute_ctr)[1]->num_ctr #numero di alveari nell'esperimento
dim(cadute_fbox)[1]->num_fbox
plot(Dates.cad,apply(cadute_fbox,2,mean),type="l") #andamento medio caduta
plot(Dates.cad,apply(cadute_ctr,2,mean),type="l")
#plot(apply(fbox_blocco_m[,c(3:12)],1,sum),fbox_blocco_m$)
#boxplot cadute
boxplot(cadute_ctr,names=(Dates.cad-as.Date("2012/07/12")),xlab="giorni dal trattamento",ylab="acari caduti")
lines(x=c(7.5,7.5),y=c(0,max(cadute_ctr)),lwd=3,col="red")
text(7.5,max(cadute_ctr),"trattamento di controllo",adj=1,col="red")
boxplot(cadute_fbox,names=(Dates.cad-as.Date("2012/07/12")))
lines(x=c(7.5,7.5),y=c(0,max(cadute_fbox)),lwd=3,col="red")
text(7.5,max(cadute_fbox),"trattamento di controllo",adj=1,col="red")
boxplot(cadute_fbox[1:7],add=F,col="red",names=(Dates.cad-as.Date("2012/07/12"))[1:7]) #confronto efficacia sotto opercolo
# #tb ta cb ca
# #ht.efficacy()
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="fbox"),3:9],1,sum)->tb
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="fbox"),10:12],1,sum)->ta
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="ctr"),3:9],1,sum)->cb
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="ctr"),10:12],1,sum)->ca
# ht.efficacy(tb,ta,cb,ca)
# ht.efficacy(tb,ta,cb,ca)->ht.cad
# mean(ht.efficacy(tb,ta,cb,ca))
# boxplot(ht.efficacy(tb,ta,cb,ca))
# henderson tilton su zucchero
fbox_blocco_m$t1_ss900[which(fbox_blocco_m$tratt=="fbox")]->tb
fbox_blocco_m$t2_ss900[which(fbox_blocco_m$tratt=="fbox")]->ta
fbox_blocco_m$t1_ss900[which(fbox_blocco_m$tratt=="ctr")]->cb
fbox_blocco_m$t2_ss900[which(fbox_blocco_m$tratt=="ctr")]->ca
ht.efficacy(tb,ta,cb,ca)
ht.efficacy(tb,ta,cb,ca)->ht.sug
mean(ht.efficacy(tb,ta,cb,ca))
fbox_blocco_m
fbox_blocco <- read.csv("../data/formicobox_blocco_conteggi.csv", sep=";", dec=",")
merge(fbox_blocco[-c(10,14:23)],fbox,by="id_hive",all.x=T)->fbox_blocco_m #togliere 76 e 77???? [-(6:7),]
fbox_blocco_m[which( apply(fbox_blocco_m[,3:12],1,sum)>200),]
fbox_blocco_m[which( apply(fbox_blocco_m[,3:12],1,sum)>200),]->fbox_blocco_m
as.Date(c("2012/7/15","2012/07/18","2012/7/22","2012/07/26","2012/7/30","2012/08/3","2012/08/7","2012/08/8","2012/08/10","2012/08/13"))->Dates.cad
fbox_blocco_m[fbox_blocco_m$tratt=="ctr",c(3:12)]->cadute_ctr
fbox_blocco_m[fbox_blocco_m$tratt=="fbox",c(3:12)]->cadute_fbox
dim(cadute_ctr)[1]->num_ctr #numero di alveari nell'esperimento
dim(cadute_fbox)[1]->num_fbox
plot(Dates.cad,apply(cadute_fbox,2,mean),type="l") #andamento medio caduta
plot(Dates.cad,apply(cadute_ctr,2,mean),type="l")
#plot(apply(fbox_blocco_m[,c(3:12)],1,sum),fbox_blocco_m$)
#boxplot cadute, usare caduta giornaliera e non dati assoluti (3 e 4 giorni)
boxplot(cadute_ctr,names=(Dates.cad-as.Date("2012/07/12")),xlab="giorni dal trattamento",ylab="acari caduti")
lines(x=c(7.5,7.5),y=c(0,max(cadute_ctr)),lwd=3,col="red")
text(7.5,max(cadute_ctr),"trattamento di controllo",adj=1,col="red")
boxplot(cadute_fbox,names=(Dates.cad-as.Date("2012/07/12")))
lines(x=c(7.5,7.5),y=c(0,max(cadute_fbox)),lwd=3,col="red")
text(7.5,max(cadute_fbox),"trattamento di controllo",adj=1,col="red")
boxplot(cadute_fbox[1:7],add=F,col="red",names=(Dates.cad-as.Date("2012/07/12"))[1:7]) #confronto efficacia sotto opercolo
# #tb ta cb ca
# #ht.efficacy()
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="fbox"),3:9],1,sum)->tb
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="fbox"),10:12],1,sum)->ta
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="ctr"),3:9],1,sum)->cb
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="ctr"),10:12],1,sum)->ca
# ht.efficacy(tb,ta,cb,ca)
# ht.efficacy(tb,ta,cb,ca)->ht.cad
# mean(ht.efficacy(tb,ta,cb,ca))
# boxplot(ht.efficacy(tb,ta,cb,ca))
# henderson tilton su zucchero
fbox_blocco_m$t1_ss900[which(fbox_blocco_m$tratt=="fbox")]->tb
fbox_blocco_m$t2_ss900[which(fbox_blocco_m$tratt=="fbox")]->ta
fbox_blocco_m$t1_ss900[which(fbox_blocco_m$tratt=="ctr")]->cb
fbox_blocco_m$t2_ss900[which(fbox_blocco_m$tratt=="ctr")]->ca
ht.efficacy(tb,ta,cb,ca)
ht.efficacy(tb,ta,cb,ca)->ht.sug
mean(ht.efficacy(tb,ta,cb,ca))
boxplot(ht.efficacy(tb,ta,cb,ca))
#correlazione zucchero a t2-cadute in blocco nel controllo
plot(apply(fbox_blocco_m[,10:12],1,sum),fbox_blocco_m$t2_ss900/9,ylab="zucchero %",xlab="cadute",main="correlazione zucchero t2-cadute in blocco ctr")
#pearson
cor(fbox_blocco_m$t2_ss900/9, apply(fbox_blocco_m[,10:12],1,sum))
#regressione per origine
lm(fbox_blocco_m$t2_ss900/9~0+apply(fbox_blocco_m[,10:12],1,sum))->linear_model
abline(linear_model)
summary(linear_model)
#numero medio di api post blocco api/campione varroe/api/campione
100/linear_model$coefficients
#calcolo efficacia metodo classico delle cadute.
eff.class<-100*apply(fbox_blocco_m[,3:9],1,sum) /  apply(fbox_blocco_m[,3:12],1,sum)
eff.class[which(fbox_blocco_m$tratt=="fbox")]->eff.cad
rm(eff.class)
#confronto con zucchero
rb<-boxplot(eff.cad,ht.sug,names=c("cadute","zucchero"))
c(mean(eff.cad),mean(ht.sug))->mean.values
points(seq(rb$n), mean.values, pch = 17) #aggiunte medie a boxplot
mean(eff.cad)
mean(ht.sug)
plot(eff.cad,ht.sug)
rb<-boxplot(eff.cad,ht.sug,names=c("cadute","zucchero"))
c(mean(eff.cad),mean(ht.sug))->mean.values
points(seq(rb$n), mean.values, pch = 17) #aggiunte medie a boxplot
mean(eff.cad)
setdiff(fbox$id_hive[which(fbox$t0_treat=="nt")],fbox_blocco$id_hive)->fbox_t2_id
dim(fbox_t2_id)
setdiff(fbox$id_hive[which(fbox$t0_treat=="nt")],fbox_blocco$id_hive)->fbox_t2_id
setdiff(fbox$id_hive[which(fbox$t0_treat=="nt")],fbox_blocco$id_hive)->fbox_t2_id
dim(fbox_t2_id)
setdiff(fbox$id_hive[which(fbox$t0_treat=="nt"),],fbox_blocco$id_hive)->fbox_t2_id
setdiff(fbox$id_hive[which(fbox$t0_treat=="nt")],fbox_blocco$id_hive)->fbox_t2_id
fbox_t2_id
setdiff(fbox$id_hive[which(fbox$t0_treat=="nt")],fbox_blocco_m$id_hive)->fbox_t2_id
fbox_t2_id
setdiff(fbox$id_hive[which(fbox$t0_treat=="nt")],fbox_blocco_m$id_hive)->fbox_t2_id
fbox_t2_id
fbox_blocco <- read.csv("../data/formicobox_blocco_conteggi.csv", sep=";", dec=",")
merge(fbox_blocco[-c(10,14:23)],fbox,by="id_hive",all.x=T)->fbox_blocco_m #togliere 76 e 77???? [-(6:7),]
setdiff(fbox$id_hive[which(fbox$t0_treat=="nt")],fbox_blocco_m$id_hive)->fbox_t2_id
fbox_t2_id
length(fbox_t2_id)
View(fbox)
fbox$t1_ss900+fbox$t2_ss900
!is.na(fbox$t1_ss900+fbox$t2_ss900)
setdiff(fbox$id_hive[which(fbox$t0_treat=="nt")],fbox_blocco_m$id_hive)->fbox_t2_id
fbox_t2_id
setdiff(fbox$id_hive[which(fbox$t0_treat=="nt")],fbox_blocco_m$id_hive)->fbox_t2_id
setdiff(fbox$id_hive[which(fbox$t0_treat=="nt")],fbox_blocco_m$id_hive)->fbox_t2_id
!is.na(fbox$t1_ss900+fbox$t2_ss900)
# carico dati
fbox_blocco <- read.csv("../data/formicobox_blocco_conteggi.csv", sep=";", dec=",")
merge(fbox_blocco[-c(10,14:23)],fbox,by="id_hive",all.x=T)->fbox_blocco_m #togliere 76 e 77???? [-(6:7),]
#fbox_blocco_m[which( apply(fbox_blocco_m[,3:12],1,sum)>200),]->fbox_blocco_m
as.Date(c("2012/7/15","2012/07/18","2012/7/22","2012/07/26","2012/7/30","2012/08/3","2012/08/7","2012/08/8","2012/08/10","2012/08/13"))->Dates.cad
fbox_blocco_m[fbox_blocco_m$tratt=="ctr",c(3:12)]->cadute_ctr
fbox_blocco_m[fbox_blocco_m$tratt=="fbox",c(3:12)]->cadute_fbox
dim(cadute_ctr)[1]->num_ctr #numero di alveari nell'esperimento
dim(cadute_fbox)[1]->num_fbox
plot(Dates.cad,apply(cadute_fbox,2,mean),type="l") #andamento medio caduta
plot(Dates.cad,apply(cadute_ctr,2,mean),type="l")
#plot(apply(fbox_blocco_m[,c(3:12)],1,sum),fbox_blocco_m$)
#boxplot cadute, usare caduta giornaliera e non dati assoluti (3 e 4 giorni)
boxplot(cadute_ctr,names=(Dates.cad-as.Date("2012/07/12")),xlab="giorni dal trattamento",ylab="acari caduti")
lines(x=c(7.5,7.5),y=c(0,max(cadute_ctr)),lwd=3,col="red")
text(7.5,max(cadute_ctr),"trattamento di controllo",adj=1,col="red")
boxplot(cadute_fbox,names=(Dates.cad-as.Date("2012/07/12")))
lines(x=c(7.5,7.5),y=c(0,max(cadute_fbox)),lwd=3,col="red")
text(7.5,max(cadute_fbox),"trattamento di controllo",adj=1,col="red")
boxplot(cadute_fbox[1:7],add=F,col="red",names=(Dates.cad-as.Date("2012/07/12"))[1:7]) #confronto efficacia sotto opercolo
# #tb ta cb ca
# #ht.efficacy()
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="fbox"),3:9],1,sum)->tb
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="fbox"),10:12],1,sum)->ta
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="ctr"),3:9],1,sum)->cb
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="ctr"),10:12],1,sum)->ca
# ht.efficacy(tb,ta,cb,ca)
# ht.efficacy(tb,ta,cb,ca)->ht.cad
# mean(ht.efficacy(tb,ta,cb,ca))
# boxplot(ht.efficacy(tb,ta,cb,ca))
# henderson tilton su zucchero
fbox_blocco_m$t1_ss900[which(fbox_blocco_m$tratt=="fbox")]->tb
fbox_blocco_m$t2_ss900[which(fbox_blocco_m$tratt=="fbox")]->ta
fbox_blocco_m$t1_ss900[which(fbox_blocco_m$tratt=="ctr")]->cb
fbox_blocco_m$t2_ss900[which(fbox_blocco_m$tratt=="ctr")]->ca
ht.efficacy(tb,ta,cb,ca)
ht.efficacy(tb,ta,cb,ca)->ht.sug
mean(ht.efficacy(tb,ta,cb,ca))
boxplot(ht.efficacy(tb,ta,cb,ca))
#correlazione zucchero a t2-cadute in blocco nel controllo
plot(apply(fbox_blocco_m[,10:12],1,sum),fbox_blocco_m$t2_ss900/9,ylab="zucchero %",xlab="cadute",main="correlazione zucchero t2-cadute in blocco ctr")
#pearson
cor(fbox_blocco_m$t2_ss900/9, apply(fbox_blocco_m[,10:12],1,sum))
#regressione per origine
lm(fbox_blocco_m$t2_ss900/9~0+apply(fbox_blocco_m[,10:12],1,sum))->linear_model
abline(linear_model)
summary(linear_model)
#numero medio di api post blocco api/campione varroe/api/campione
100/linear_model$coefficients
#idem senza 76 e 77
fbox_blocco_m->fbox_blocco_m_old
fbox_blocco_m[-c(6,7),]->fbox_blocco_m
#correlazione zucchero a t2-cadute in blocco nel controllo
plot(apply(fbox_blocco_m[,10:12],1,sum),fbox_blocco_m$t2_ss900/9,ylab="zucchero %",xlab="cadute",main="correlazione zucchero t2-cadute in blocco ctr")
#pearson
cor(fbox_blocco_m$t2_ss900/9, apply(fbox_blocco_m[,10:12],1,sum))
#regressione per origine
lm(fbox_blocco_m$t2_ss900/9~0+apply(fbox_blocco_m[,10:12],1,sum))->linear_model
abline(linear_model)
summary(linear_model)
#numero medio di api post blocco api/campione varroe/api/campione
100/linear_model$coefficients
#ripristino dati
View(fbox_blocco_m)
boxplot(fboxi_fb$t1_ht.eff)
plot(Dates.cad,apply(cadute_fbox,2,mean),type="l") #andamento medio caduta
plot(Dates.cad,apply(cadute_ctr,2,mean),type="l")
#plot(apply(fbox_blocco_m[,c(3:12)],1,sum),fbox_blocco_m$)
#boxplot cadute, usare caduta giornaliera e non dati assoluti (3 e 4 giorni)
boxplot(cadute_ctr,names=(Dates.cad-as.Date("2012/07/12")),xlab="giorni dal trattamento",ylab="acari caduti")
lines(x=c(7.5,7.5),y=c(0,max(cadute_ctr)),lwd=3,col="red")
text(7.5,max(cadute_ctr),"trattamento di controllo",adj=1,col="red")
boxplot(cadute_fbox,names=(Dates.cad-as.Date("2012/07/12")))
lines(x=c(7.5,7.5),y=c(0,max(cadute_fbox)),lwd=3,col="red")
text(7.5,max(cadute_fbox),"trattamento di controllo",adj=1,col="red")
boxplot(cadute_fbox[1:7],add=F,col="red",names=(Dates.cad-as.Date("2012/07/12"))[1:7]) #confronto efficacia sotto opercolo
# #tb ta cb ca
# #ht.efficacy()
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="fbox"),3:9],1,sum)->tb
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="fbox"),10:12],1,sum)->ta
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="ctr"),3:9],1,sum)->cb
# apply(fbox_blocco_m[which(fbox_blocco_m$tratt=="ctr"),10:12],1,sum)->ca
# ht.efficacy(tb,ta,cb,ca)
# ht.efficacy(tb,ta,cb,ca)->ht.cad
# mean(ht.efficacy(tb,ta,cb,ca))
# boxplot(ht.efficacy(tb,ta,cb,ca))
# henderson tilton su zucchero
fbox_blocco_m$t1_ss900[which(fbox_blocco_m$tratt=="fbox")]->tb
fbox_blocco_m$t2_ss900[which(fbox_blocco_m$tratt=="fbox")]->ta
fbox_blocco_m$t1_ss900[which(fbox_blocco_m$tratt=="ctr")]->cb
fbox_blocco_m$t2_ss900[which(fbox_blocco_m$tratt=="ctr")]->ca
ht.efficacy(tb,ta,cb,ca)
ht.efficacy(tb,ta,cb,ca)->ht.sug
mean(ht.efficacy(tb,ta,cb,ca))
boxplot(ht.efficacy(tb,ta,cb,ca))
#correlazione zucchero a t2-cadute in blocco nel controllo
plot(apply(fbox_blocco_m[,10:12],1,sum),fbox_blocco_m$t2_ss900/9,ylab="zucchero %",xlab="cadute",main="correlazione zucchero t2-cadute in blocco ctr")
#pearson
cor(fbox_blocco_m$t2_ss900/9, apply(fbox_blocco_m[,10:12],1,sum))
#regressione per origine
lm(fbox_blocco_m$t2_ss900/9~0+apply(fbox_blocco_m[,10:12],1,sum))->linear_model
abline(linear_model)
summary(linear_model)
#numero medio di api post blocco api/campione varroe/api/campione
boxplot(ht.efficacy(tb,ta,cb,ca))->prova
prova
plot(prova)
print(prova)
str(prova)
boxplot(prova)
boxplot(ht.efficacy(tb,ta,cb,ca))->prova
str(1L)
str(1)
as.integer(1)
str(as.integer(1))
as.integer(1)/2
?complete.cases
y <- c("a", "b", NA, "d", NA, "f")
compareVersion
compareVersion()
complete.cases(y)
?dump
x=c(7,8,9)
x
dput()
?fm
install.packages("Rcmdr")
library("Rcmdr")
30*35
945.02+33.5+(0.45*56)
0.45*56
merge(fbox,fbox_blocco[-c(10,14:23)],by="id_hive",all.x=T)->fbox_temp
which((fbox_temp$t0_treat=="nt") & is.na(fbox_temp$tratt))->treat_indices
which[fbox_temp$tratt=="fbox"]
fbox_temp$tratt
which(fbox_temp$tratt=="fbox")->gr4
merge(fbox,fbox_blocco[-c(10,14:23)],by="id_hive",all.x=T)->fbox_temp
which((fbox_temp$t0_treat=="nt") & is.na(fbox_temp$tratt))->gr2
1:48->gr1
which(fbox_temp$tratt=="fbox")->gr3
which(fbox_temp$tratt=="fbox")->gr4
fbox$groups<-fbox_temp$tratt
fbox$groups[gr1]<-"gr1"
fbox$groups<-as.character(fbox_temp$tratt)
fbox$groups[gr1]<-"gr1"
fbox$groups[gr1]<-"gr1"
fbox$groups[gr2]<-"gr2"
fbox$groups[gr3]<-"gr3"
fbox$groups[gr4]<-"gr4"
fbox$groups
View(fbox_blocco)
View(fbox)
max(fbox$ti_ss900)
max(fbox$t1_ss900)
max(fbox$t1_ss900,na.rm=T)
max(fbox$t0_ss900,na.rm=T)
max(fbox$t2_ss900,na.rm=T)
max(fbox$t3_ss900,na.rm=T)
max(fbox$t4_ss900,na.rm=T)
boxplot(fbox$t0_ss900)
boxplot(fbox$t0_ss900,fbox$t1_ss900,fbox$t2_ss900,fbox$t3_ss900)
boxplot(t0_ss900,t1_ss900,t2_ss900,t3_ss900,data=fbox)
?boxplot
boxplot(fbox$t0_ss900[which(fbox$gruppi=="gr1")],fbox$t1_ss900,fbox$t2_ss900,fbox$t3_ss900)
boxplot(fbox$t0_ss900[gr1],fbox$t1_ss900,fbox$t2_ss900,fbox$t3_ss900)
boxplot(fbox$t0_ss900[gr1],fbox$t1_ss900[gr1],fbox$t2_ss900[gr1],fbox$t3_ss900[gr1])
boxplot(fbox$t0_ss900[gr1],fbox$t1_ss900[gr1],fbox$t2_ss900[gr1],fbox$t3_ss900[gr1],col="red")
boxplot(fbox$t0_ss900[gr1],fbox$t1_ss900[gr1],fbox$t2_ss900[gr1],fbox$t3_ss900[gr1],col=1)
boxplot(fbox$t0_ss900[gr1],fbox$t1_ss900[gr1],fbox$t2_ss900[gr1],fbox$t3_ss900[gr1],col=2)
boxplot(fbox$t0_ss900[gr1],fbox$t1_ss900[gr1],fbox$t2_ss900[gr1],fbox$t3_ss900[gr1],col=2)
boxplot(fbox$t0_ss900[gr1],fbox$t1_ss900[gr1],fbox$t2_ss900[gr1],fbox$t3_ss900[gr1],col=2)
boxplot(fbox$t0_ss900[gr2],fbox$t1_ss900[gr2],fbox$t2_ss900[gr2],fbox$t3_ss900[gr2],col=3,add=T)
boxplot(fbox$t0_ss900[gr3],fbox$t1_ss900[gr3],fbox$t2_ss900[gr3],fbox$t3_ss900[gr3],col=4,add=T)
boxplot(fbox$t0_ss900[gr4],fbox$t1_ss900[gr4],fbox$t2_ss900[gr4],fbox$t3_ss900[gr4],col=5,add=T)
boxplot(fbox$t0_ss900[gr1],fbox$t1_ss900[gr1],fbox$t2_ss900[gr1],fbox$t3_ss900[gr1],col=2)
boxplot(fbox$t0_ss900[gr2],fbox$t1_ss900[gr2],fbox$t2_ss900[gr2],fbox$t3_ss900[gr2],col=3,add=T)
boxplot(fbox$t0_ss900[gr3],fbox$t1_ss900[gr3],fbox$t2_ss900[gr3],fbox$t3_ss900[gr3],col=4,add=T)
boxplot(fbox$t0_ss900[gr4],fbox$t1_ss900[gr4],fbox$t2_ss900[gr4],fbox$t3_ss900[gr4],col=5,add=T)
?apply
fbox$t0_ss900
tapply(fbox$t0_ss900,fbox$groups,mean)
tapply(fbox$t0_ss900,fbox$groups,mean,na.rm=T)
merge(fbox,fbox_blocco[-c(10,14:23)],by="id_hive",all.x=T)->fbox_temp
which((fbox_temp$t0_treat=="nt") & is.na(fbox_temp$tratt))->gr2
1:48->gr1
which(fbox_temp$tratt=="fbox")->gr3
which(fbox_temp$tratt=="fbox")->gr4
fbox$groups<-as.character(fbox_temp$tratt)
fbox$groups
fbox$groups[gr1]="gr1"
fbox$groups
fbox$groups[gr2]="gr2"
fbox$groups[gr3]="gr3"
fbox$groups[gr4]="gr4"
boxplot(fbox$t0_ss900,fbox$t1_ss900,fbox$t2_ss900,fbox$t3_ss900)
boxplot(fbox$t0_ss900[gr1],fbox$t1_ss900[gr1],fbox$t2_ss900[gr1],fbox$t3_ss900[gr1],col=2)
boxplot(fbox$t0_ss900[gr2],fbox$t1_ss900[gr2],fbox$t2_ss900[gr2],fbox$t3_ss900[gr2],col=3,add=T)
boxplot(fbox$t0_ss900[gr3],fbox$t1_ss900[gr3],fbox$t2_ss900[gr3],fbox$t3_ss900[gr3],col=4,add=T)
boxplot(fbox$t0_ss900[gr4],fbox$t1_ss900[gr4],fbox$t2_ss900[gr4],fbox$t3_ss900[gr4],col=5,add=T)
tapply(fbox$t0_ss900,fbox$groups,mean,na.rm=T)
tapply(fbox$t1_ss900,fbox$groups,mean,na.rm=T)
tapply(fbox$t2_ss900,fbox$groups,mean,na.rm=T)
tapply(fbox$t3_ss900,fbox$groups,mean,na.rm=T)
merge(fbox,fbox_blocco[-c(10,14:23)],by="id_hive",all.x=T)->fbox_temp
which((fbox_temp$t0_treat=="nt") & is.na(fbox_temp$tratt))->gr2
1:48->gr1
which(fbox_temp$tratt=="fbox")->gr3
which(fbox_temp$tratt=="ctr")->gr4
fbox$groups<-as.character(fbox_temp$tratt)
fbox$groups[gr1]="gr1"
fbox$groups[gr2]="gr2"
fbox$groups[gr3]="gr3"
fbox$groups[gr4]="gr4"
boxplot(fbox$t0_ss900,fbox$t1_ss900,fbox$t2_ss900,fbox$t3_ss900)
boxplot(fbox$t0_ss900[gr1],fbox$t1_ss900[gr1],fbox$t2_ss900[gr1],fbox$t3_ss900[gr1],col=2)
boxplot(fbox$t0_ss900[gr2],fbox$t1_ss900[gr2],fbox$t2_ss900[gr2],fbox$t3_ss900[gr2],col=3,add=T)
boxplot(fbox$t0_ss900[gr3],fbox$t1_ss900[gr3],fbox$t2_ss900[gr3],fbox$t3_ss900[gr3],col=4,add=T)
boxplot(fbox$t0_ss900[gr4],fbox$t1_ss900[gr4],fbox$t2_ss900[gr4],fbox$t3_ss900[gr4],col=5,add=T)
tapply(fbox$t0_ss900,fbox$groups,mean,na.rm=T)
tapply(fbox$t1_ss900,fbox$groups,mean,na.rm=T)
tapply(fbox$t2_ss900,fbox$groups,mean,na.rm=T)
tapply(fbox$t3_ss900,fbox$groups,mean,na.rm=T)
tapply(fbox$t0_ss900,fbox$groups,median,na.rm=T)
tapply(fbox$t1_ss900,fbox$groups,median,na.rm=T)
tapply(fbox$t2_ss900,fbox$groups,median,na.rm=T)
tapply(fbox$t3_ss900,fbox$groups,median,na.rm=T)
medians=Null
rbind(medians,tapply(fbox$t0_ss900,fbox$groups,median,na.rm=T))->medians
rbind(medians,tapply(fbox$t1_ss900,fbox$groups,median,na.rm=T))->medians
rbind(medians,tapply(fbox$t2_ss900,fbox$groups,median,na.rm=T))->medians
rbind(medians,tapply(fbox$t3_ss900,fbox$groups,median,na.rm=T))->medians
medians
mediana=Null
rbind(mediana,tapply(fbox$t0_ss900,fbox$groups,median,na.rm=T))->mediana
rbind(mediana,tapply(fbox$t1_ss900,fbox$groups,median,na.rm=T))->mediana
rbind(mediana,tapply(fbox$t2_ss900,fbox$groups,median,na.rm=T))->mediana
rbind(mediana,tapply(fbox$t3_ss900,fbox$groups,median,na.rm=T))->mediana
mediana
mediana
rm(mediana)
mediana
tapply(fbox$t1_ss900,fbox$groups,median,na.rm=T)
str(tapply(fbox$t1_ss900,fbox$groups,median,na.rm=T))
mediana
(tapply(fbox$t0_ss900,fbox$groups,median,na.rm=T))->mediana
rbind(mediana,tapply(fbox$t1_ss900,fbox$groups,median,na.rm=T))->mediana
rbind(mediana,tapply(fbox$t2_ss900,fbox$groups,median,na.rm=T))->mediana
rbind(mediana,tapply(fbox$t3_ss900,fbox$groups,median,na.rm=T))->mediana
mediana
(tapply(fbox$t0_ss900,fbox$groups,mean,na.rm=T))->meana
rbind(meana,tapply(fbox$t1_ss900,fbox$groups,mean,na.rm=T))->meana
rbind(meana,tapply(fbox$t2_ss900,fbox$groups,mean,na.rm=T))->meana
rbind(meana,tapply(fbox$t3_ss900,fbox$groups,mean,na.rm=T))->meana
meana
(tapply(fbox$t0_ss900,fbox$groups,var,na.rm=T))->vara
rbind(vara,tapply(fbox$t1_ss900,fbox$groups,var,na.rm=T))->vara
rbind(vara,tapply(fbox$t2_ss900,fbox$groups,var,na.rm=T))->vara
rbind(vara,tapply(fbox$t3_ss900,fbox$groups,var,na.rm=T))->vara
vara
row.names(mediana)<-c("t0","t1","t2","t3")
mediana
meana/vara
meana/vara/0.3
poisson.test(7,900)
poisson.test(23,900)
curve(sqrt(x)/x,0,10)
20*35
poisson.test(2,900)
poisson.test(8,900)
?poisson.test
poisson.test(c(2,8),c(900,900))
poisson.test(c(2,16),c(900,1800))
poisson.test(c(4,8),c(1800,900))
#
detach()
rm(list=ls())
# data load ---------------------------------------------------------------
fbox <- read.csv("../data/fbox_def.csv", sep=",")
fbox$t0_treat<-c(rep("fb",48),rep("nt",48))   #treatments: fbox, no treatment
# 900 bees sums -----------------------------------------------------------
fbox$t0_ss900<- fbox$t0_ss300_1 + fbox$t0_ss300_2 + fbox$t0_ss300_3 #total sugar shake time 0
fbox$t1_ss900<- fbox$t1_ss300_1 + fbox$t1_ss300_2 + fbox$t1_ss300_3 #total sugar shake time 1
fbox$t2_ss900<- fbox$t2_ss300_1 + fbox$t2_ss300_2 + fbox$t2_ss300_3 #total sugar shake time 2
fbox$t3_ss900<- fbox$t3_ss300_1 + fbox$t3_ss300_2 + fbox$t3_ss300_3 #total sugar shake time 3
# hives selection -------------------------------------------------------
minvar=5.5  #varroe minime per inclusione
maxvar=300 #varroe massime per inclusione
!is.na(fbox$t0_ss900-fbox$t1_ss900)->include # NAs removed (only time 0 and 1)
#
detach()
rm(list=ls())
setwd("./scripts/")
# data load ---------------------------------------------------------------
fbox <- read.csv("../data/fbox_def.csv", sep=",")
fbox$t0_treat<-c(rep("fb",48),rep("nt",48))   #treatments: fbox, no treatment
# 900 bees sums -----------------------------------------------------------
fbox$t0_ss900<- fbox$t0_ss300_1 + fbox$t0_ss300_2 + fbox$t0_ss300_3 #total sugar shake time 0
fbox$t1_ss900<- fbox$t1_ss300_1 + fbox$t1_ss300_2 + fbox$t1_ss300_3 #total sugar shake time 1
fbox$t2_ss900<- fbox$t2_ss300_1 + fbox$t2_ss300_2 + fbox$t2_ss300_3 #total sugar shake time 2
fbox$t3_ss900<- fbox$t3_ss300_1 + fbox$t3_ss300_2 + fbox$t3_ss300_3 #total sugar shake time 3
# hives selection -------------------------------------------------------
minvar=5.5  #varroe minime per inclusione
maxvar=300 #varroe massime per inclusione
!is.na(fbox$t0_ss900-fbox$t1_ss900)->include # NAs removed (only time 0 and 1)
fbox$t0_ss900<maxvar & fbox$t0_ss900>minvar & include ->include #excluded most infested hives and hives with infestation under 1/900
fboxi<-fbox[include,] #dataset delle casse in analisi
rm(include)
#fboxi<-fboxi[order(fboxi$ss9_bt),] ????? inutile ?????
n_nt<-dim(fboxi[fboxi$t0_treat=="nt",])[1] # num ctr hives
n_fb<-dim(fboxi[fboxi$t0_treat=="fb",])[1]    # num fbox hives
# t1-t0 growth analysis ---------------------------------------------------
